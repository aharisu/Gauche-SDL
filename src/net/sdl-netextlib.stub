
"
#include \"gauche-sdl-netext.h\"
#include \"../sdl_type.gen.h\"
"

(include "../sdl_type.gen.stub.header")
(include "../macro.stub.header")

(define-cise-stmt (builder-set-len vec pos size len)
  `(when (!= ,size 0)
    (case ,size
      [(1) (set! (aref (cast (unsigned char*) (+ (ref ,vec buf) ,pos)) 0) ,len)
           (pre++ ,pos)]
      [(2) (set! (aref (cast (unsigned short*) (+ (ref ,vec buf) ,pos)) 0) ,len)
           (set! ,pos (+ ,pos 2))]
      [(4) (set! (aref (cast (unsigned long*) (+ (ref ,vec buf) ,pos)) 0) ,len)
           (set! ,pos (+ ,pos 4))])))

(define-cproc builder-add-real (vec::<nnvector> val::<real> pos::<fixnum> with-len::<fixnum>) :: <fixnum>
  (builder-set-len vec pos with-len (sizeof val))
  (memcpy (+ (@ vec.buf) pos)
          (& val)
          (sizeof val))
  (result (+ (sizeof val) with-len)))

(define-cproc builder-add-f32 (vec::<nnvector> val::<float> pos::<fixnum> with-len::<fixnum>) :: <fixnum>
  (builder-set-len vec pos with-len (sizeof val))
  (memcpy (+ (@ vec.buf) pos)
          (& val)
          (sizeof val))
  (result (+ (sizeof val) with-len)))

(define-cproc reader-get-real (vec::<nnvector> pos::<fixnum> with-size::<fixnum>) :: (<real> <fixnum>)
  (let* ([val :: double])
    (set! pos (+ pos with-size))
    (memcpy (& val)
            (+ (@ vec.buf) pos)
            (sizeof val))
    (result val (+ (sizeof val) with-size))))

(define-cproc reader-get-f32 (vec::<nnvector> pos::<fixnum> with-size::<fixnum>) :: (<real> <fixnum>)
  (let* ([val :: float])
    (set! pos (+ pos with-size))
    (memcpy (& val)
            (+ (@ vec.buf) pos)
            (sizeof val))
    (result val (+ (sizeof val) with-size))))

"
extern int string_TObytevectorX(nnvector* v,int tstart,ScmString* s,int start,int end);
"

(define-cproc builder-add-string (vec::<nnvector> str::<string> pos::<fixnum> with-len::<fixnum>) :: <fixnum>
  (let* ([copy-pos :: int pos])
    (case with-len
      [(0)]
      [(1 2 4) (set! copy-pos (+ pos with-len))]
      [else (Scm_Error "with-len is 1 or 2 or 4 required, but got %S" with-len)])
    (let* ([len :: int (string_TObytevectorX (& vec) copy-pos str 0 -1)])
      (builder-set-len vec pos with-len len)
      (result (+ len with-len)))))

"
extern ScmObj bytevector_TOstring(nnvector* v,int start,int end);
"

(define-cproc reader-get-string (vec::<nnvector> pos::<fixnum> size::<fixnum>) :: <top>
  (result (bytevector_TOstring (& vec) pos (+ pos size))))
  
  

